/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.GerenciaCirurgia;
import controller.GerenciaExame;
import controller.GerenciaMedicamento;
import controller.GerenciaPaciente;
import controller.GerenciaProntuario;
import dao.CirurgiaDao;
import dao.ExameDao;
import dao.FuncionarioDao;
import dao.MedicamentoDao;
import dao.PacienteDao;
import dao.ProntuarioDao;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Date;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.EventObject;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.CellEditorListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import model.Funcionario;
import model.Medicamento;
import model.Paciente;
import model.Pessoa;
import model.Prontuario;

/**
 *
 * @author Wanderson_M
 */
public class ConsultaEditar extends javax.swing.JInternalFrame {

    /**
     * Creates new form Consulta
     */
    String medics[];
    FramePrincipal fp;
    ArrayList<Pessoa> medicos;
    ArrayList<Pessoa> pacientes;
    ArrayList<model.Medicamento> medicamentos;
    ArrayList<model.Medicamento> medicamentosEscolhidos;
    ArrayList<model.Prontuario> consultas;
    FuncionarioDao fd;
    PacienteDao pd;
    MedicamentoDao md;
    ProntuarioDao prd;
    CirurgiaDao cd;
    ExameDao ed;
    GerenciaPaciente gerenciaPaciente;
    GerenciaProntuario gp;
    GerenciaMedicamento gm;
    GerenciaExame ge;
    GerenciaCirurgia gc;

    public ConsultaEditar() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        gerenciaPaciente = new GerenciaPaciente();
        gp = new GerenciaProntuario();
        fp = new FramePrincipal();
        fd = new FuncionarioDao();
        ed = new ExameDao();
        pd = new PacienteDao();
        md = new MedicamentoDao();
        gm = new GerenciaMedicamento();
        ge = new GerenciaExame();
        gc = new GerenciaCirurgia();
        prd = new ProntuarioDao();
        cd = new CirurgiaDao();
        medicos = fd.listarFuncionarioNCF("Medico");
        pacientes = pd.listarNC();
        if (medicos == null || medicos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum m√©dico encontrado !");
            dispose();
        }
        if (pacientes == null || pacientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum paciente encontrado !");
            dispose();
        }

        medicamentosEscolhidos = new ArrayList();
        preencheCampos();
        consultas = prd.listarTodos();

        if (consultas == null || consultas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhuma consulta encontrda");
            dispose();
        } else {
            for (int i = 0; i < consultas.size(); i++) {
                String consulta = ("Consulta - " + consultas.get(i).getData() + " -- " + consultas.get(i).getHora());
                cbxConsulta.addItem(consulta);
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jpMedicoPaciente = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jliMedicamentos = new javax.swing.JList<>();
        btnPassar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnSalvar = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtMedicamentos = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtMedicamentosAntigos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        cbxMedico = new javax.swing.JComboBox<>();
        cbxPaciente = new javax.swing.JComboBox<>();
        btnAnterior2 = new javax.swing.JButton();
        btnAvancar2 = new javax.swing.JButton();
        btnAnterior3 = new javax.swing.JButton();
        btnAvancar3 = new javax.swing.JButton();
        jpDataHorarioDiagnostico = new javax.swing.JPanel();
        jdcData = new com.toedter.calendar.JDateChooser();
        jsHora = new javax.swing.JSpinner();
        jsMinuto = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDiagnostico = new javax.swing.JTextArea();
        jpSalaCirurgia1 = new javax.swing.JPanel();
        cbxConsulta = new javax.swing.JComboBox<>();
        btnAnterior1 = new javax.swing.JButton();
        btnAvancar1 = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jpMedicoPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpMedicoPacienteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpMedicoPacienteLayout = new javax.swing.GroupLayout(jpMedicoPaciente);
        jpMedicoPaciente.setLayout(jpMedicoPacienteLayout);
        jpMedicoPacienteLayout.setHorizontalGroup(
            jpMedicoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        jpMedicoPacienteLayout.setVerticalGroup(
            jpMedicoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        jliMedicamentos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medicamentos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jliMedicamentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jliMedicamentos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jliMedicamentosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jliMedicamentos);

        btnPassar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPassar.setText("+");
        btnPassar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPassarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSalvar.setText("Alterar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jButton2.setText("Fechar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medicamentos novos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jtMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMedicamentos.setToolTipText("");
        jScrollPane5.setViewportView(jtMedicamentos);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medicamentos antigos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jtMedicamentosAntigos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMedicamentosAntigos.setToolTipText("");
        jScrollPane6.setViewportView(jtMedicamentosAntigos);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(btnPassar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPassar)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvar)
                            .addComponent(jButton2)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        cbxMedico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "M√©dico", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        cbxPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Paciente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        cbxPaciente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxPacienteItemStateChanged(evt);
            }
        });

        btnAnterior2.setText("<<");
        btnAnterior2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnterior2ActionPerformed(evt);
            }
        });

        btnAvancar2.setText(">>");
        btnAvancar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancar2ActionPerformed(evt);
            }
        });

        btnAnterior3.setText("<<");
        btnAnterior3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnterior3ActionPerformed(evt);
            }
        });

        btnAvancar3.setText(">>");
        btnAvancar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxMedico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAvancar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnterior2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAvancar3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnterior3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAnterior3)
                            .addComponent(btnAnterior2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAvancar3)
                            .addComponent(btnAvancar2)))
                    .addComponent(cbxPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jdcData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jsHora.setModel(new javax.swing.SpinnerNumberModel(1, 0, 23, 1));
        jsHora.setBorder(javax.swing.BorderFactory.createTitledBorder("Hora"));

        jsMinuto.setModel(new javax.swing.SpinnerNumberModel(1, 0, 59, 1));
        jsMinuto.setBorder(javax.swing.BorderFactory.createTitledBorder("Minuto"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Relat√≥rio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taDiagnostico.setColumns(20);
        taDiagnostico.setRows(5);
        jScrollPane1.setViewportView(taDiagnostico);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jpDataHorarioDiagnosticoLayout = new javax.swing.GroupLayout(jpDataHorarioDiagnostico);
        jpDataHorarioDiagnostico.setLayout(jpDataHorarioDiagnosticoLayout);
        jpDataHorarioDiagnosticoLayout.setHorizontalGroup(
            jpDataHorarioDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDataHorarioDiagnosticoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDataHorarioDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDataHorarioDiagnosticoLayout.createSequentialGroup()
                        .addComponent(jsHora, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jsMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jdcData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpDataHorarioDiagnosticoLayout.setVerticalGroup(
            jpDataHorarioDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataHorarioDiagnosticoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpDataHorarioDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpDataHorarioDiagnosticoLayout.createSequentialGroup()
                        .addComponent(jdcData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDataHorarioDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jsHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpDataHorarioDiagnostico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpDataHorarioDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cbxConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        cbxConsulta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxConsultaItemStateChanged(evt);
            }
        });

        btnAnterior1.setText("<<");
        btnAnterior1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnterior1ActionPerformed(evt);
            }
        });

        btnAvancar1.setText(">>");
        btnAvancar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSalaCirurgia1Layout = new javax.swing.GroupLayout(jpSalaCirurgia1);
        jpSalaCirurgia1.setLayout(jpSalaCirurgia1Layout);
        jpSalaCirurgia1Layout.setHorizontalGroup(
            jpSalaCirurgia1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSalaCirurgia1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cbxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAnterior1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnAvancar1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpSalaCirurgia1Layout.setVerticalGroup(
            jpSalaCirurgia1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSalaCirurgia1Layout.createSequentialGroup()
                .addGroup(jpSalaCirurgia1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpSalaCirurgia1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpSalaCirurgia1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jpSalaCirurgia1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAnterior1)
                            .addComponent(btnAvancar1))))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpSalaCirurgia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpMedicoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpMedicoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpSalaCirurgia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            Prontuario c = new Prontuario();
            c.setPaciente((Paciente) pacientes.get(cbxPaciente.getSelectedIndex()));
            c.setMedico((Funcionario) medicos.get(cbxMedico.getSelectedIndex()));
            c.setHora(LocalTime.of((int) jsHora.getValue(), (int) jsMinuto.getValue()));
            ArrayList<String> medicamentosSelecionados = new ArrayList();

            for (int i = 0; i < jtMedicamentos.getRowCount(); i++) {
                medicamentosSelecionados.add(jtMedicamentos.getValueAt(i, 0).toString());

            }

            for (int i = 0; i < medicamentos.size(); i++) {
                String nome = medicamentos.get(i).getNome();
                for (int j = 0; j < medicamentosSelecionados.size(); j++) {
                    String ms = medicamentosSelecionados.get(j);
                    if (nome == ms) {
                        model.Medicamento medicamento = medicamentos.get(i);
                        medicamento.setQuantidade(((model.Medicamento) jtMedicamentos.getValueAt(j, 0)).getQuantidade());
                    }
                }
            }
            c.setMedicamentos(medicamentosEscolhidos);
            c.setData(jdcData.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());

            c.setDiagnostico(taDiagnostico.getText());

            c.setId(consultas.get(cbxConsulta.getSelectedIndex()).getId());
            int re = gp.alterar(c);
            if (re == 1) {
                re = 0;
                re = gm.alterar(c.getMedicamentos(), c.getId());

                if (re == 1) {
                    JOptionPane.showMessageDialog(this, "Alterado com sucesso !");
                    dispose();
                }
            }

        } catch (Exception e) {
            e.printStackTrace();

        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jpMedicoPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpMedicoPacienteMouseClicked


    }//GEN-LAST:event_jpMedicoPacienteMouseClicked

    private void btnPassarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPassarActionPerformed

        Boolean igual = false;
        if (medicamentosEscolhidos.isEmpty()) {
            model.Medicamento m = medicamentos.get(jliMedicamentos.getSelectedIndex()).getClone();
            m.setQuantidade(1);
            medicamentosEscolhidos.add(m);
        } else {

            for (int j = 0; j < medicamentosEscolhidos.size(); j++) {
                String nome = medicamentos.get(jliMedicamentos.getSelectedIndex()).getNome();
                String nomeListaEscolhidos = medicamentosEscolhidos.get(j).getNome();
                if (nome == nomeListaEscolhidos) {
                    igual = true;

                }
            }

            if (!igual) {
                model.Medicamento m = medicamentos.get(jliMedicamentos.getSelectedIndex()).getClone();
                m.setQuantidade(1);
                medicamentosEscolhidos.add(m);

            }

        }

        Object[][] valores = new Object[medicamentosEscolhidos.size()][2];
        for (int i = 0; i < medicamentosEscolhidos.size(); i++) {
            valores[i][0] = medicamentosEscolhidos.get(i);
            valores[i][1] = medicamentosEscolhidos.get(i).getQuantidade();
        }
        DefaultTableModel model = new DefaultTableModel(valores, new String[]{"Nome", "Quantidade"});
        jtMedicamentos.setModel(model);
        CriaSpinnerJtable();

//            medx.addElement(me.getNome());
//        jliMedicamentosEscolhidos.setModel(medx);

    }//GEN-LAST:event_btnPassarActionPerformed

    private void jliMedicamentosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jliMedicamentosValueChanged


    }//GEN-LAST:event_jliMedicamentosValueChanged

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        gc.excluirNulos();
        gm.excluirMPNulo();
        ge.excluirNulos();

    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing


    }//GEN-LAST:event_formInternalFrameClosing

    private void cbxPacienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxPacienteItemStateChanged


    }//GEN-LAST:event_cbxPacienteItemStateChanged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        gc.excluirNulos();
        gm.excluirMPNulo();
        ge.excluirNulos();    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        medicamentosEscolhidos.remove(jtMedicamentos.getSelectedRow());
        ((DefaultTableModel) jtMedicamentos.getModel()).removeRow(jtMedicamentos.getSelectedRow());


    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAvancar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancar1ActionPerformed
        if (cbxConsulta.getItemCount() != 0) {

            if (cbxConsulta.getSelectedIndex() + 1 >= cbxConsulta.getItemCount()) {
                cbxConsulta.setSelectedIndex(0);
            } else {

                cbxConsulta.setSelectedIndex(cbxConsulta.getSelectedIndex() + 1);
            }
        }    }//GEN-LAST:event_btnAvancar1ActionPerformed

    private void btnAnterior1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnterior1ActionPerformed
        if (cbxConsulta.getItemCount() != 0) {

            if (cbxConsulta.getSelectedIndex() - 1 < 0) {
                cbxConsulta.setSelectedIndex(cbxConsulta.getItemCount() - 1);
            } else {

                cbxConsulta.setSelectedIndex(cbxConsulta.getSelectedIndex() - 1);
            }
        }    }//GEN-LAST:event_btnAnterior1ActionPerformed

    private void cbxConsultaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxConsultaItemStateChanged

        for (int i = 0; i < pacientes.size(); i++) {

            if (consultas.get(cbxConsulta.getSelectedIndex()).getPaciente().getNome().equals(pacientes.get(i).getNome())) {
                cbxPaciente.setSelectedIndex(i);
            }

        }

        for (int i = 0; i < medicos.size(); i++) {

            for (int j = 0; j < consultas.size(); j++) {
                if (consultas.get(cbxConsulta.getSelectedIndex()).getMedico().getNome().equals(medicos.get(i).getNome())) {
                    cbxMedico.setSelectedIndex(i);
                }
            }
        }

        jdcData.setDate(Date.valueOf(consultas.get(cbxConsulta.getSelectedIndex()).getData()));
        jsHora.setValue((consultas.get(cbxConsulta.getSelectedIndex()).getHora().getHour()));
        jsMinuto.setValue((consultas.get(cbxConsulta.getSelectedIndex()).getHora().getMinute()));

        taDiagnostico.setText(consultas.get(cbxConsulta.getSelectedIndex()).getDiagnostico());
        if (consultas.get(cbxConsulta.getSelectedIndex()).getMedicamentos() != null) {

            Object[][] valores = new Object[consultas.get(cbxConsulta.getSelectedIndex()).getMedicamentos().size()][2];
            for (int i = 0; i < consultas.get(cbxConsulta.getSelectedIndex()).getMedicamentos().size(); i++) {
                valores[i][0] = consultas.get(cbxConsulta.getSelectedIndex()).getMedicamentos().get(i);
                valores[i][1] = consultas.get(cbxConsulta.getSelectedIndex()).getMedicamentos().get(i).getQuantidade();
            }
            DefaultTableModel model = new DefaultTableModel(valores, new String[]{"Nome", "Quantidade"});
            jtMedicamentosAntigos.setModel(model);

        }

    }//GEN-LAST:event_cbxConsultaItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int i = 0;
        int e = JOptionPane.showConfirmDialog(this, "Deseja Fechar ?", "", JOptionPane.OK_CANCEL_OPTION);
        if (e == JOptionPane.OK_OPTION) {
            dispose();

        }     }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAnterior2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnterior2ActionPerformed
        if (cbxMedico.getItemCount() != 0) {

            if (cbxMedico.getSelectedIndex() - 1 < 0) {
                cbxMedico.setSelectedIndex(cbxMedico.getItemCount() - 1);
            } else {

                cbxMedico.setSelectedIndex(cbxMedico.getSelectedIndex() - 1);
            }
        }     }//GEN-LAST:event_btnAnterior2ActionPerformed

    private void btnAvancar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancar2ActionPerformed
        if (cbxMedico.getItemCount() != 0) {

            if (cbxMedico.getSelectedIndex() + 1 >= cbxMedico.getItemCount()) {
                cbxMedico.setSelectedIndex(0);
            } else {

                cbxMedico.setSelectedIndex(cbxMedico.getSelectedIndex() + 1);
            }
        }    }//GEN-LAST:event_btnAvancar2ActionPerformed

    private void btnAnterior3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnterior3ActionPerformed
        if (cbxPaciente.getItemCount() != 0) {

            if (cbxPaciente.getSelectedIndex() - 1 < 0) {
                cbxPaciente.setSelectedIndex(cbxPaciente.getItemCount() - 1);
            } else {

                cbxPaciente.setSelectedIndex(cbxPaciente.getSelectedIndex() - 1);
            }
        }     }//GEN-LAST:event_btnAnterior3ActionPerformed

    private void btnAvancar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancar3ActionPerformed
        if (cbxPaciente.getItemCount() != 0) {

            if (cbxPaciente.getSelectedIndex() + 1 >= cbxPaciente.getItemCount()) {
                cbxPaciente.setSelectedIndex(0);
            } else {

                cbxPaciente.setSelectedIndex(cbxPaciente.getSelectedIndex() + 1);
            }
        }    }//GEN-LAST:event_btnAvancar3ActionPerformed

    public void preencheCampos() {
        medicamentos = md.listar();

        if (medicamentos == null || medicamentos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum medicamento cadastrado!");

        } else {

            DefaultListModel medx = new DefaultListModel();
            for (model.Medicamento me : medicamentos) {
                medx.addElement(me.getNome());

            }
            jliMedicamentos.setModel(medx);

        }
        if (medicos == null || medicos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum medico cadastrado!");
        } else {
            for (int i = 0; i < medicos.size(); i++) {
                cbxMedico.addItem(medicos.get(i).getNome() + " " + medicos.get(i).getSobrenome());

            }

        }

        for (int i = 0; i < pacientes.size(); i++) {
            cbxPaciente.addItem(pacientes.get(i).getNome() + " " + pacientes.get(i).getSobrenome());
        }

    }

    public void CriaSpinnerJtable() {

        TableColumn coluna = jtMedicamentos.getColumnModel().getColumn(1);
        coluna.setCellEditor(new TableCellEditor() {

            @Override

            public Component getTableCellEditorComponent(JTable table, Object value, boolean bln, int row, int column) {
                JSpinner spinner = new JSpinner();

                model.Medicamento m = (model.Medicamento) jtMedicamentos.getModel().getValueAt(row, 0);
                int quantidadeMax = 0;
                for (model.Medicamento me : medicamentos) {
                    if (m.getNome().equals(me.getNome())) {
                        quantidadeMax = me.getQuantidade();
                    }

                }
                spinner.setModel(new SpinnerNumberModel(m.getQuantidade(), 1, quantidadeMax, 1));
                spinner.setEditor(new JSpinner.NumberEditor(spinner));
                spinner.addChangeListener(new javax.swing.event.ChangeListener() {
                    public void stateChanged(javax.swing.event.ChangeEvent evt) {
                        model.Medicamento m = (model.Medicamento) jtMedicamentos.getValueAt(row, 0);
                        m.setQuantidade((int) spinner.getValue());
//                        System.out.println("V: " + spinner.getValue());
//                        System.out.println("Hash: " + spinner.hashCode());

                    }
                });
                if (value != null) {
                    spinner.setValue(Integer.valueOf(value.toString()));

                } else {
                    System.out.println("N√£o foi possivel criar Renderer");
                }
                return spinner;
            }

            @Override
            public Object getCellEditorValue() {

                return null;

            }

            @Override
            public boolean isCellEditable(EventObject eo) {
                return true;
            }

            @Override
            public boolean shouldSelectCell(EventObject eo) {
                return true;
            }

            @Override
            public boolean stopCellEditing() {
                return true;
            }

            @Override
            public void cancelCellEditing() {

            }

            @Override
            public void addCellEditorListener(CellEditorListener l) {

            }

            @Override
            public void removeCellEditorListener(CellEditorListener l) {

            }
        });

        jtMedicamentos.setRowHeight(30);
        DefaultTableModel model = (DefaultTableModel) jtMedicamentos.getModel();
//        model.a
        coluna.setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                JSpinner spinner = new JSpinner();
                model.Medicamento m = (model.Medicamento) jtMedicamentos.getModel().getValueAt(row, 0);
                int quantidadeMax = 0;
                for (model.Medicamento me : medicamentos) {
                    if (m.getNome().equals(me.getNome())) {
                        quantidadeMax = me.getQuantidade();
                    }

                }
                spinner.setModel(new SpinnerNumberModel(m.getQuantidade(), 1, quantidadeMax, 1));
                spinner.setEditor(new JSpinner.NumberEditor(spinner));
                if (value != null) {
                    spinner.setValue(Integer.valueOf(value.toString()));

                } else {
                    System.out.println("N√£o foi possivel criar Renderer");
                }
                return spinner;
            }

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior1;
    private javax.swing.JButton btnAnterior2;
    private javax.swing.JButton btnAnterior3;
    private javax.swing.JButton btnAvancar1;
    private javax.swing.JButton btnAvancar2;
    private javax.swing.JButton btnAvancar3;
    private javax.swing.JButton btnPassar;
    private javax.swing.JToggleButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxConsulta;
    private javax.swing.JComboBox<String> cbxMedico;
    private javax.swing.JComboBox<String> cbxPaciente;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private com.toedter.calendar.JDateChooser jdcData;
    private javax.swing.JList<String> jliMedicamentos;
    private javax.swing.JPanel jpDataHorarioDiagnostico;
    private javax.swing.JPanel jpMedicoPaciente;
    private javax.swing.JPanel jpSalaCirurgia1;
    private javax.swing.JSpinner jsHora;
    private javax.swing.JSpinner jsMinuto;
    private javax.swing.JTable jtMedicamentos;
    private javax.swing.JTable jtMedicamentosAntigos;
    private javax.swing.JTextArea taDiagnostico;
    // End of variables declaration//GEN-END:variables
}
